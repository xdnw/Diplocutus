/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.war.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Blockaded implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Object blockader;
    private final Object blockaded;

    public Blockaded(Blockaded value) {
        this.blockader = value.blockader;
        this.blockaded = value.blockaded;
    }

    public Blockaded(
        Object blockader,
        Object blockaded
    ) {
        this.blockader = blockader;
        this.blockaded = blockaded;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getBlockader() {
        return this.blockader;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getBlockaded() {
        return this.blockaded;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Blockaded other = (Blockaded) obj;
        if (this.blockader == null) {
            if (other.blockader != null)
                return false;
        }
        else if (!this.blockader.equals(other.blockader))
            return false;
        if (this.blockaded == null) {
            if (other.blockaded != null)
                return false;
        }
        else if (!this.blockaded.equals(other.blockaded))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.blockader == null) ? 0 : this.blockader.hashCode());
        result = prime * result + ((this.blockaded == null) ? 0 : this.blockaded.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Blockaded (");

        sb.append(blockader);
        sb.append(", ").append(blockaded);

        sb.append(")");
        return sb.toString();
    }
}
