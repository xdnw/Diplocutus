/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.war.tables.records;


import org.example.jooq.war.tables.CounterStats;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CounterStatsRecord extends UpdatableRecordImpl<CounterStatsRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>COUNTER_STATS.id</code>.
     */
    public CounterStatsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>COUNTER_STATS.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>COUNTER_STATS.type</code>.
     */
    public CounterStatsRecord setType(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>COUNTER_STATS.type</code>.
     */
    public Integer getType() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>COUNTER_STATS.active</code>.
     */
    public CounterStatsRecord setActive(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>COUNTER_STATS.active</code>.
     */
    public Integer getActive() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CounterStats.COUNTER_STATS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return CounterStats.COUNTER_STATS.TYPE;
    }

    @Override
    public Field<Integer> field3() {
        return CounterStats.COUNTER_STATS.ACTIVE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getType();
    }

    @Override
    public Integer component3() {
        return getActive();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getType();
    }

    @Override
    public Integer value3() {
        return getActive();
    }

    @Override
    public CounterStatsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CounterStatsRecord value2(Integer value) {
        setType(value);
        return this;
    }

    @Override
    public CounterStatsRecord value3(Integer value) {
        setActive(value);
        return this;
    }

    @Override
    public CounterStatsRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CounterStatsRecord
     */
    public CounterStatsRecord() {
        super(CounterStats.COUNTER_STATS);
    }

    /**
     * Create a detached, initialised CounterStatsRecord
     */
    public CounterStatsRecord(Integer id, Integer type, Integer active) {
        super(CounterStats.COUNTER_STATS);

        setId(id);
        setType(type);
        setActive(active);
    }

    /**
     * Create a detached, initialised CounterStatsRecord
     */
    public CounterStatsRecord(org.example.jooq.war.tables.pojos.CounterStats value) {
        super(CounterStats.COUNTER_STATS);

        if (value != null) {
            setId(value.getId());
            setType(value.getType());
            setActive(value.getActive());
        }
    }
}
