/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.trade.tables.records;


import org.example.jooq.trade.tables.Trades;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TradesRecord extends UpdatableRecordImpl<TradesRecord> implements Record11<Integer, Long, Integer, Integer, Integer, Integer, Long, Integer, Integer, Long, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>TRADES.tradeId</code>.
     */
    public TradesRecord setTradeid(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>TRADES.tradeId</code>.
     */
    public Integer getTradeid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TRADES.date</code>.
     */
    public TradesRecord setDate(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>TRADES.date</code>.
     */
    public Long getDate() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>TRADES.seller</code>.
     */
    public TradesRecord setSeller(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>TRADES.seller</code>.
     */
    public Integer getSeller() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>TRADES.buyer</code>.
     */
    public TradesRecord setBuyer(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>TRADES.buyer</code>.
     */
    public Integer getBuyer() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>TRADES.resource</code>.
     */
    public TradesRecord setResource(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>TRADES.resource</code>.
     */
    public Integer getResource() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>TRADES.isBuy</code>.
     */
    public TradesRecord setIsbuy(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>TRADES.isBuy</code>.
     */
    public Integer getIsbuy() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>TRADES.quantity</code>.
     */
    public TradesRecord setQuantity(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>TRADES.quantity</code>.
     */
    public Long getQuantity() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>TRADES.ppu</code>.
     */
    public TradesRecord setPpu(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>TRADES.ppu</code>.
     */
    public Integer getPpu() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>TRADES.type</code>.
     */
    public TradesRecord setType(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>TRADES.type</code>.
     */
    public Integer getType() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>TRADES.date_accepted</code>.
     */
    public TradesRecord setDateAccepted(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>TRADES.date_accepted</code>.
     */
    public Long getDateAccepted() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>TRADES.parent_id</code>.
     */
    public TradesRecord setParentId(Integer value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>TRADES.parent_id</code>.
     */
    public Integer getParentId() {
        return (Integer) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, Long, Integer, Integer, Integer, Integer, Long, Integer, Integer, Long, Integer> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, Long, Integer, Integer, Integer, Integer, Long, Integer, Integer, Long, Integer> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Trades.TRADES.TRADEID;
    }

    @Override
    public Field<Long> field2() {
        return Trades.TRADES.DATE;
    }

    @Override
    public Field<Integer> field3() {
        return Trades.TRADES.SELLER;
    }

    @Override
    public Field<Integer> field4() {
        return Trades.TRADES.BUYER;
    }

    @Override
    public Field<Integer> field5() {
        return Trades.TRADES.RESOURCE;
    }

    @Override
    public Field<Integer> field6() {
        return Trades.TRADES.ISBUY;
    }

    @Override
    public Field<Long> field7() {
        return Trades.TRADES.QUANTITY;
    }

    @Override
    public Field<Integer> field8() {
        return Trades.TRADES.PPU;
    }

    @Override
    public Field<Integer> field9() {
        return Trades.TRADES.TYPE;
    }

    @Override
    public Field<Long> field10() {
        return Trades.TRADES.DATE_ACCEPTED;
    }

    @Override
    public Field<Integer> field11() {
        return Trades.TRADES.PARENT_ID;
    }

    @Override
    public Integer component1() {
        return getTradeid();
    }

    @Override
    public Long component2() {
        return getDate();
    }

    @Override
    public Integer component3() {
        return getSeller();
    }

    @Override
    public Integer component4() {
        return getBuyer();
    }

    @Override
    public Integer component5() {
        return getResource();
    }

    @Override
    public Integer component6() {
        return getIsbuy();
    }

    @Override
    public Long component7() {
        return getQuantity();
    }

    @Override
    public Integer component8() {
        return getPpu();
    }

    @Override
    public Integer component9() {
        return getType();
    }

    @Override
    public Long component10() {
        return getDateAccepted();
    }

    @Override
    public Integer component11() {
        return getParentId();
    }

    @Override
    public Integer value1() {
        return getTradeid();
    }

    @Override
    public Long value2() {
        return getDate();
    }

    @Override
    public Integer value3() {
        return getSeller();
    }

    @Override
    public Integer value4() {
        return getBuyer();
    }

    @Override
    public Integer value5() {
        return getResource();
    }

    @Override
    public Integer value6() {
        return getIsbuy();
    }

    @Override
    public Long value7() {
        return getQuantity();
    }

    @Override
    public Integer value8() {
        return getPpu();
    }

    @Override
    public Integer value9() {
        return getType();
    }

    @Override
    public Long value10() {
        return getDateAccepted();
    }

    @Override
    public Integer value11() {
        return getParentId();
    }

    @Override
    public TradesRecord value1(Integer value) {
        setTradeid(value);
        return this;
    }

    @Override
    public TradesRecord value2(Long value) {
        setDate(value);
        return this;
    }

    @Override
    public TradesRecord value3(Integer value) {
        setSeller(value);
        return this;
    }

    @Override
    public TradesRecord value4(Integer value) {
        setBuyer(value);
        return this;
    }

    @Override
    public TradesRecord value5(Integer value) {
        setResource(value);
        return this;
    }

    @Override
    public TradesRecord value6(Integer value) {
        setIsbuy(value);
        return this;
    }

    @Override
    public TradesRecord value7(Long value) {
        setQuantity(value);
        return this;
    }

    @Override
    public TradesRecord value8(Integer value) {
        setPpu(value);
        return this;
    }

    @Override
    public TradesRecord value9(Integer value) {
        setType(value);
        return this;
    }

    @Override
    public TradesRecord value10(Long value) {
        setDateAccepted(value);
        return this;
    }

    @Override
    public TradesRecord value11(Integer value) {
        setParentId(value);
        return this;
    }

    @Override
    public TradesRecord values(Integer value1, Long value2, Integer value3, Integer value4, Integer value5, Integer value6, Long value7, Integer value8, Integer value9, Long value10, Integer value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TradesRecord
     */
    public TradesRecord() {
        super(Trades.TRADES);
    }

    /**
     * Create a detached, initialised TradesRecord
     */
    public TradesRecord(Integer tradeid, Long date, Integer seller, Integer buyer, Integer resource, Integer isbuy, Long quantity, Integer ppu, Integer type, Long dateAccepted, Integer parentId) {
        super(Trades.TRADES);

        setTradeid(tradeid);
        setDate(date);
        setSeller(seller);
        setBuyer(buyer);
        setResource(resource);
        setIsbuy(isbuy);
        setQuantity(quantity);
        setPpu(ppu);
        setType(type);
        setDateAccepted(dateAccepted);
        setParentId(parentId);
    }

    /**
     * Create a detached, initialised TradesRecord
     */
    public TradesRecord(org.example.jooq.trade.tables.pojos.Trades value) {
        super(Trades.TRADES);

        if (value != null) {
            setTradeid(value.getTradeid());
            setDate(value.getDate());
            setSeller(value.getSeller());
            setBuyer(value.getBuyer());
            setResource(value.getResource());
            setIsbuy(value.getIsbuy());
            setQuantity(value.getQuantity());
            setPpu(value.getPpu());
            setType(value.getType());
            setDateAccepted(value.getDateAccepted());
            setParentId(value.getParentId());
        }
    }
}
