/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.bank.tables.records;


import org.example.jooq.bank.tables.TaxBrackets;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaxBracketsRecord extends UpdatableRecordImpl<TaxBracketsRecord> implements Record4<Integer, Integer, Integer, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>TAX_BRACKETS.id</code>.
     */
    public TaxBracketsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>TAX_BRACKETS.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TAX_BRACKETS.money</code>.
     */
    public TaxBracketsRecord setMoney(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>TAX_BRACKETS.money</code>.
     */
    public Integer getMoney() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>TAX_BRACKETS.resources</code>.
     */
    public TaxBracketsRecord setResources(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>TAX_BRACKETS.resources</code>.
     */
    public Integer getResources() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>TAX_BRACKETS.date</code>.
     */
    public TaxBracketsRecord setDate(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>TAX_BRACKETS.date</code>.
     */
    public Long getDate() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Integer, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TaxBrackets.TAX_BRACKETS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return TaxBrackets.TAX_BRACKETS.MONEY;
    }

    @Override
    public Field<Integer> field3() {
        return TaxBrackets.TAX_BRACKETS.RESOURCES;
    }

    @Override
    public Field<Long> field4() {
        return TaxBrackets.TAX_BRACKETS.DATE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getMoney();
    }

    @Override
    public Integer component3() {
        return getResources();
    }

    @Override
    public Long component4() {
        return getDate();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getMoney();
    }

    @Override
    public Integer value3() {
        return getResources();
    }

    @Override
    public Long value4() {
        return getDate();
    }

    @Override
    public TaxBracketsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TaxBracketsRecord value2(Integer value) {
        setMoney(value);
        return this;
    }

    @Override
    public TaxBracketsRecord value3(Integer value) {
        setResources(value);
        return this;
    }

    @Override
    public TaxBracketsRecord value4(Long value) {
        setDate(value);
        return this;
    }

    @Override
    public TaxBracketsRecord values(Integer value1, Integer value2, Integer value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaxBracketsRecord
     */
    public TaxBracketsRecord() {
        super(TaxBrackets.TAX_BRACKETS);
    }

    /**
     * Create a detached, initialised TaxBracketsRecord
     */
    public TaxBracketsRecord(Integer id, Integer money, Integer resources, Long date) {
        super(TaxBrackets.TAX_BRACKETS);

        setId(id);
        setMoney(money);
        setResources(resources);
        setDate(date);
    }

    /**
     * Create a detached, initialised TaxBracketsRecord
     */
    public TaxBracketsRecord(org.example.jooq.bank.tables.pojos.TaxBrackets value) {
        super(TaxBrackets.TAX_BRACKETS);

        if (value != null) {
            setId(value.getId());
            setMoney(value.getMoney());
            setResources(value.getResources());
            setDate(value.getDate());
        }
    }
}
