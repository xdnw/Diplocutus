/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.nations.tables.records;


import org.example.jooq.nations.tables.SpiesBuildup;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpiesBuildupRecord extends UpdatableRecordImpl<SpiesBuildupRecord> implements Record3<Integer, Integer, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>SPIES_BUILDUP.nation</code>.
     */
    public SpiesBuildupRecord setNation(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>SPIES_BUILDUP.nation</code>.
     */
    public Integer getNation() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>SPIES_BUILDUP.spies</code>.
     */
    public SpiesBuildupRecord setSpies(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>SPIES_BUILDUP.spies</code>.
     */
    public Integer getSpies() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>SPIES_BUILDUP.day</code>.
     */
    public SpiesBuildupRecord setDay(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>SPIES_BUILDUP.day</code>.
     */
    public Long getDay() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return SpiesBuildup.SPIES_BUILDUP.NATION;
    }

    @Override
    public Field<Integer> field2() {
        return SpiesBuildup.SPIES_BUILDUP.SPIES;
    }

    @Override
    public Field<Long> field3() {
        return SpiesBuildup.SPIES_BUILDUP.DAY;
    }

    @Override
    public Integer component1() {
        return getNation();
    }

    @Override
    public Integer component2() {
        return getSpies();
    }

    @Override
    public Long component3() {
        return getDay();
    }

    @Override
    public Integer value1() {
        return getNation();
    }

    @Override
    public Integer value2() {
        return getSpies();
    }

    @Override
    public Long value3() {
        return getDay();
    }

    @Override
    public SpiesBuildupRecord value1(Integer value) {
        setNation(value);
        return this;
    }

    @Override
    public SpiesBuildupRecord value2(Integer value) {
        setSpies(value);
        return this;
    }

    @Override
    public SpiesBuildupRecord value3(Long value) {
        setDay(value);
        return this;
    }

    @Override
    public SpiesBuildupRecord values(Integer value1, Integer value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SpiesBuildupRecord
     */
    public SpiesBuildupRecord() {
        super(SpiesBuildup.SPIES_BUILDUP);
    }

    /**
     * Create a detached, initialised SpiesBuildupRecord
     */
    public SpiesBuildupRecord(Integer nation, Integer spies, Long day) {
        super(SpiesBuildup.SPIES_BUILDUP);

        setNation(nation);
        setSpies(spies);
        setDay(day);
    }

    /**
     * Create a detached, initialised SpiesBuildupRecord
     */
    public SpiesBuildupRecord(org.example.jooq.nations.tables.pojos.SpiesBuildup value) {
        super(SpiesBuildup.SPIES_BUILDUP);

        if (value != null) {
            setNation(value.getNation());
            setSpies(value.getSpies());
            setDay(value.getDay());
        }
    }
}
