/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.nations.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RadiationByTurn implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer continent;
    private final Integer radiation;
    private final Long turn;

    public RadiationByTurn(RadiationByTurn value) {
        this.continent = value.continent;
        this.radiation = value.radiation;
        this.turn = value.turn;
    }

    public RadiationByTurn(
        Integer continent,
        Integer radiation,
        Long turn
    ) {
        this.continent = continent;
        this.radiation = radiation;
        this.turn = turn;
    }

    /**
     * Getter for <code>RADIATION_BY_TURN.continent</code>.
     */
    public Integer getContinent() {
        return this.continent;
    }

    /**
     * Getter for <code>RADIATION_BY_TURN.radiation</code>.
     */
    public Integer getRadiation() {
        return this.radiation;
    }

    /**
     * Getter for <code>RADIATION_BY_TURN.turn</code>.
     */
    public Long getTurn() {
        return this.turn;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final RadiationByTurn other = (RadiationByTurn) obj;
        if (this.continent == null) {
            if (other.continent != null)
                return false;
        }
        else if (!this.continent.equals(other.continent))
            return false;
        if (this.radiation == null) {
            if (other.radiation != null)
                return false;
        }
        else if (!this.radiation.equals(other.radiation))
            return false;
        if (this.turn == null) {
            if (other.turn != null)
                return false;
        }
        else if (!this.turn.equals(other.turn))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.continent == null) ? 0 : this.continent.hashCode());
        result = prime * result + ((this.radiation == null) ? 0 : this.radiation.hashCode());
        result = prime * result + ((this.turn == null) ? 0 : this.turn.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("RadiationByTurn (");

        sb.append(continent);
        sb.append(", ").append(radiation);
        sb.append(", ").append(turn);

        sb.append(")");
        return sb.toString();
    }
}
