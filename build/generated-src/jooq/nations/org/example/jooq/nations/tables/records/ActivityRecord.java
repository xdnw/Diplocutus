/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.nations.tables.records;


import org.example.jooq.nations.tables.Activity;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActivityRecord extends UpdatableRecordImpl<ActivityRecord> implements Record2<Integer, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>activity.nation</code>.
     */
    public ActivityRecord setNation(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>activity.nation</code>.
     */
    public Integer getNation() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>activity.turn</code>.
     */
    public ActivityRecord setTurn(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>activity.turn</code>.
     */
    public Long getTurn() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Activity.ACTIVITY.NATION;
    }

    @Override
    public Field<Long> field2() {
        return Activity.ACTIVITY.TURN;
    }

    @Override
    public Integer component1() {
        return getNation();
    }

    @Override
    public Long component2() {
        return getTurn();
    }

    @Override
    public Integer value1() {
        return getNation();
    }

    @Override
    public Long value2() {
        return getTurn();
    }

    @Override
    public ActivityRecord value1(Integer value) {
        setNation(value);
        return this;
    }

    @Override
    public ActivityRecord value2(Long value) {
        setTurn(value);
        return this;
    }

    @Override
    public ActivityRecord values(Integer value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ActivityRecord
     */
    public ActivityRecord() {
        super(Activity.ACTIVITY);
    }

    /**
     * Create a detached, initialised ActivityRecord
     */
    public ActivityRecord(Integer nation, Long turn) {
        super(Activity.ACTIVITY);

        setNation(nation);
        setTurn(turn);
    }

    /**
     * Create a detached, initialised ActivityRecord
     */
    public ActivityRecord(org.example.jooq.nations.tables.pojos.Activity value) {
        super(Activity.ACTIVITY);

        if (value != null) {
            setNation(value.getNation());
            setTurn(value.getTurn());
        }
    }
}
