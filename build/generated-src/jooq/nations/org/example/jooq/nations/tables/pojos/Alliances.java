/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.nations.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Alliances implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final String name;
    private final String acronym;
    private final String flag;
    private final String forumLink;
    private final String discordLink;
    private final String wikiLink;
    private final Long datecreated;
    private final Integer color;

    public Alliances(Alliances value) {
        this.id = value.id;
        this.name = value.name;
        this.acronym = value.acronym;
        this.flag = value.flag;
        this.forumLink = value.forumLink;
        this.discordLink = value.discordLink;
        this.wikiLink = value.wikiLink;
        this.datecreated = value.datecreated;
        this.color = value.color;
    }

    public Alliances(
        Integer id,
        String name,
        String acronym,
        String flag,
        String forumLink,
        String discordLink,
        String wikiLink,
        Long datecreated,
        Integer color
    ) {
        this.id = id;
        this.name = name;
        this.acronym = acronym;
        this.flag = flag;
        this.forumLink = forumLink;
        this.discordLink = discordLink;
        this.wikiLink = wikiLink;
        this.datecreated = datecreated;
        this.color = color;
    }

    /**
     * Getter for <code>ALLIANCES.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>ALLIANCES.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>ALLIANCES.acronym</code>.
     */
    public String getAcronym() {
        return this.acronym;
    }

    /**
     * Getter for <code>ALLIANCES.flag</code>.
     */
    public String getFlag() {
        return this.flag;
    }

    /**
     * Getter for <code>ALLIANCES.forum_link</code>.
     */
    public String getForumLink() {
        return this.forumLink;
    }

    /**
     * Getter for <code>ALLIANCES.discord_link</code>.
     */
    public String getDiscordLink() {
        return this.discordLink;
    }

    /**
     * Getter for <code>ALLIANCES.wiki_link</code>.
     */
    public String getWikiLink() {
        return this.wikiLink;
    }

    /**
     * Getter for <code>ALLIANCES.dateCreated</code>.
     */
    public Long getDatecreated() {
        return this.datecreated;
    }

    /**
     * Getter for <code>ALLIANCES.color</code>.
     */
    public Integer getColor() {
        return this.color;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Alliances other = (Alliances) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.acronym == null) {
            if (other.acronym != null)
                return false;
        }
        else if (!this.acronym.equals(other.acronym))
            return false;
        if (this.flag == null) {
            if (other.flag != null)
                return false;
        }
        else if (!this.flag.equals(other.flag))
            return false;
        if (this.forumLink == null) {
            if (other.forumLink != null)
                return false;
        }
        else if (!this.forumLink.equals(other.forumLink))
            return false;
        if (this.discordLink == null) {
            if (other.discordLink != null)
                return false;
        }
        else if (!this.discordLink.equals(other.discordLink))
            return false;
        if (this.wikiLink == null) {
            if (other.wikiLink != null)
                return false;
        }
        else if (!this.wikiLink.equals(other.wikiLink))
            return false;
        if (this.datecreated == null) {
            if (other.datecreated != null)
                return false;
        }
        else if (!this.datecreated.equals(other.datecreated))
            return false;
        if (this.color == null) {
            if (other.color != null)
                return false;
        }
        else if (!this.color.equals(other.color))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.acronym == null) ? 0 : this.acronym.hashCode());
        result = prime * result + ((this.flag == null) ? 0 : this.flag.hashCode());
        result = prime * result + ((this.forumLink == null) ? 0 : this.forumLink.hashCode());
        result = prime * result + ((this.discordLink == null) ? 0 : this.discordLink.hashCode());
        result = prime * result + ((this.wikiLink == null) ? 0 : this.wikiLink.hashCode());
        result = prime * result + ((this.datecreated == null) ? 0 : this.datecreated.hashCode());
        result = prime * result + ((this.color == null) ? 0 : this.color.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Alliances (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(acronym);
        sb.append(", ").append(flag);
        sb.append(", ").append(forumLink);
        sb.append(", ").append(discordLink);
        sb.append(", ").append(wikiLink);
        sb.append(", ").append(datecreated);
        sb.append(", ").append(color);

        sb.append(")");
        return sb.toString();
    }
}
