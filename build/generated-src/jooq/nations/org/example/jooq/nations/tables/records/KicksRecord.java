/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.nations.tables.records;


import org.example.jooq.nations.tables.Kicks;
import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KicksRecord extends TableRecordImpl<KicksRecord> implements Record4<Integer, Integer, Long, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>KICKS.nation</code>.
     */
    public KicksRecord setNation(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>KICKS.nation</code>.
     */
    public Integer getNation() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>KICKS.alliance</code>.
     */
    public KicksRecord setAlliance(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>KICKS.alliance</code>.
     */
    public Integer getAlliance() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>KICKS.date</code>.
     */
    public KicksRecord setDate(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>KICKS.date</code>.
     */
    public Long getDate() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>KICKS.type</code>.
     */
    public KicksRecord setType(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>KICKS.type</code>.
     */
    public Integer getType() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Long, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Long, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Kicks.KICKS.NATION;
    }

    @Override
    public Field<Integer> field2() {
        return Kicks.KICKS.ALLIANCE;
    }

    @Override
    public Field<Long> field3() {
        return Kicks.KICKS.DATE;
    }

    @Override
    public Field<Integer> field4() {
        return Kicks.KICKS.TYPE;
    }

    @Override
    public Integer component1() {
        return getNation();
    }

    @Override
    public Integer component2() {
        return getAlliance();
    }

    @Override
    public Long component3() {
        return getDate();
    }

    @Override
    public Integer component4() {
        return getType();
    }

    @Override
    public Integer value1() {
        return getNation();
    }

    @Override
    public Integer value2() {
        return getAlliance();
    }

    @Override
    public Long value3() {
        return getDate();
    }

    @Override
    public Integer value4() {
        return getType();
    }

    @Override
    public KicksRecord value1(Integer value) {
        setNation(value);
        return this;
    }

    @Override
    public KicksRecord value2(Integer value) {
        setAlliance(value);
        return this;
    }

    @Override
    public KicksRecord value3(Long value) {
        setDate(value);
        return this;
    }

    @Override
    public KicksRecord value4(Integer value) {
        setType(value);
        return this;
    }

    @Override
    public KicksRecord values(Integer value1, Integer value2, Long value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached KicksRecord
     */
    public KicksRecord() {
        super(Kicks.KICKS);
    }

    /**
     * Create a detached, initialised KicksRecord
     */
    public KicksRecord(Integer nation, Integer alliance, Long date, Integer type) {
        super(Kicks.KICKS);

        setNation(nation);
        setAlliance(alliance);
        setDate(date);
        setType(type);
    }

    /**
     * Create a detached, initialised KicksRecord
     */
    public KicksRecord(org.example.jooq.nations.tables.pojos.Kicks value) {
        super(Kicks.KICKS);

        if (value != null) {
            setNation(value.getNation());
            setAlliance(value.getAlliance());
            setDate(value.getDate());
            setType(value.getType());
        }
    }
}
