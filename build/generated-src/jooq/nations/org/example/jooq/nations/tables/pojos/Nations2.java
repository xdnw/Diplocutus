/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.nations.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Nations2 implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer nationId;
    private final String nation;
    private final String leader;
    private final Integer allianceId;
    private final Long lastActive;
    private final Integer score;
    private final Integer cities;
    private final Integer domesticPolicy;
    private final Integer warPolicy;
    private final Integer soldiers;
    private final Integer tanks;
    private final Integer aircraft;
    private final Integer ships;
    private final Integer missiles;
    private final Integer nukes;
    private final Integer spies;
    private final Long enteredVm;
    private final Long leavingVm;
    private final Integer color;
    private final Long date;
    private final Integer position;
    private final Integer allianceposition;
    private final Integer continent;
    private final Long projects;
    private final Long citytimer;
    private final Long projecttimer;
    private final Long beigetimer;
    private final Long warpolicytimer;
    private final Long domesticpolicytimer;
    private final Long colortimer;
    private final Long espionagefull;
    private final Integer dcTurn;
    private final Integer warsWon;
    private final Integer warsLost;
    private final Integer taxId;

    public Nations2(Nations2 value) {
        this.nationId = value.nationId;
        this.nation = value.nation;
        this.leader = value.leader;
        this.allianceId = value.allianceId;
        this.lastActive = value.lastActive;
        this.score = value.score;
        this.cities = value.cities;
        this.domesticPolicy = value.domesticPolicy;
        this.warPolicy = value.warPolicy;
        this.soldiers = value.soldiers;
        this.tanks = value.tanks;
        this.aircraft = value.aircraft;
        this.ships = value.ships;
        this.missiles = value.missiles;
        this.nukes = value.nukes;
        this.spies = value.spies;
        this.enteredVm = value.enteredVm;
        this.leavingVm = value.leavingVm;
        this.color = value.color;
        this.date = value.date;
        this.position = value.position;
        this.allianceposition = value.allianceposition;
        this.continent = value.continent;
        this.projects = value.projects;
        this.citytimer = value.citytimer;
        this.projecttimer = value.projecttimer;
        this.beigetimer = value.beigetimer;
        this.warpolicytimer = value.warpolicytimer;
        this.domesticpolicytimer = value.domesticpolicytimer;
        this.colortimer = value.colortimer;
        this.espionagefull = value.espionagefull;
        this.dcTurn = value.dcTurn;
        this.warsWon = value.warsWon;
        this.warsLost = value.warsLost;
        this.taxId = value.taxId;
    }

    public Nations2(
        Integer nationId,
        String nation,
        String leader,
        Integer allianceId,
        Long lastActive,
        Integer score,
        Integer cities,
        Integer domesticPolicy,
        Integer warPolicy,
        Integer soldiers,
        Integer tanks,
        Integer aircraft,
        Integer ships,
        Integer missiles,
        Integer nukes,
        Integer spies,
        Long enteredVm,
        Long leavingVm,
        Integer color,
        Long date,
        Integer position,
        Integer allianceposition,
        Integer continent,
        Long projects,
        Long citytimer,
        Long projecttimer,
        Long beigetimer,
        Long warpolicytimer,
        Long domesticpolicytimer,
        Long colortimer,
        Long espionagefull,
        Integer dcTurn,
        Integer warsWon,
        Integer warsLost,
        Integer taxId
    ) {
        this.nationId = nationId;
        this.nation = nation;
        this.leader = leader;
        this.allianceId = allianceId;
        this.lastActive = lastActive;
        this.score = score;
        this.cities = cities;
        this.domesticPolicy = domesticPolicy;
        this.warPolicy = warPolicy;
        this.soldiers = soldiers;
        this.tanks = tanks;
        this.aircraft = aircraft;
        this.ships = ships;
        this.missiles = missiles;
        this.nukes = nukes;
        this.spies = spies;
        this.enteredVm = enteredVm;
        this.leavingVm = leavingVm;
        this.color = color;
        this.date = date;
        this.position = position;
        this.allianceposition = allianceposition;
        this.continent = continent;
        this.projects = projects;
        this.citytimer = citytimer;
        this.projecttimer = projecttimer;
        this.beigetimer = beigetimer;
        this.warpolicytimer = warpolicytimer;
        this.domesticpolicytimer = domesticpolicytimer;
        this.colortimer = colortimer;
        this.espionagefull = espionagefull;
        this.dcTurn = dcTurn;
        this.warsWon = warsWon;
        this.warsLost = warsLost;
        this.taxId = taxId;
    }

    /**
     * Getter for <code>NATIONS2.nation_id</code>.
     */
    public Integer getNationId() {
        return this.nationId;
    }

    /**
     * Getter for <code>NATIONS2.nation</code>.
     */
    public String getNation() {
        return this.nation;
    }

    /**
     * Getter for <code>NATIONS2.leader</code>.
     */
    public String getLeader() {
        return this.leader;
    }

    /**
     * Getter for <code>NATIONS2.alliance_id</code>.
     */
    public Integer getAllianceId() {
        return this.allianceId;
    }

    /**
     * Getter for <code>NATIONS2.last_active</code>.
     */
    public Long getLastActive() {
        return this.lastActive;
    }

    /**
     * Getter for <code>NATIONS2.score</code>.
     */
    public Integer getScore() {
        return this.score;
    }

    /**
     * Getter for <code>NATIONS2.cities</code>.
     */
    public Integer getCities() {
        return this.cities;
    }

    /**
     * Getter for <code>NATIONS2.domestic_policy</code>.
     */
    public Integer getDomesticPolicy() {
        return this.domesticPolicy;
    }

    /**
     * Getter for <code>NATIONS2.war_policy</code>.
     */
    public Integer getWarPolicy() {
        return this.warPolicy;
    }

    /**
     * Getter for <code>NATIONS2.soldiers</code>.
     */
    public Integer getSoldiers() {
        return this.soldiers;
    }

    /**
     * Getter for <code>NATIONS2.tanks</code>.
     */
    public Integer getTanks() {
        return this.tanks;
    }

    /**
     * Getter for <code>NATIONS2.aircraft</code>.
     */
    public Integer getAircraft() {
        return this.aircraft;
    }

    /**
     * Getter for <code>NATIONS2.ships</code>.
     */
    public Integer getShips() {
        return this.ships;
    }

    /**
     * Getter for <code>NATIONS2.missiles</code>.
     */
    public Integer getMissiles() {
        return this.missiles;
    }

    /**
     * Getter for <code>NATIONS2.nukes</code>.
     */
    public Integer getNukes() {
        return this.nukes;
    }

    /**
     * Getter for <code>NATIONS2.spies</code>.
     */
    public Integer getSpies() {
        return this.spies;
    }

    /**
     * Getter for <code>NATIONS2.entered_vm</code>.
     */
    public Long getEnteredVm() {
        return this.enteredVm;
    }

    /**
     * Getter for <code>NATIONS2.leaving_vm</code>.
     */
    public Long getLeavingVm() {
        return this.leavingVm;
    }

    /**
     * Getter for <code>NATIONS2.color</code>.
     */
    public Integer getColor() {
        return this.color;
    }

    /**
     * Getter for <code>NATIONS2.date</code>.
     */
    public Long getDate() {
        return this.date;
    }

    /**
     * Getter for <code>NATIONS2.position</code>.
     */
    public Integer getPosition() {
        return this.position;
    }

    /**
     * Getter for <code>NATIONS2.alliancePosition</code>.
     */
    public Integer getAllianceposition() {
        return this.allianceposition;
    }

    /**
     * Getter for <code>NATIONS2.continent</code>.
     */
    public Integer getContinent() {
        return this.continent;
    }

    /**
     * Getter for <code>NATIONS2.projects</code>.
     */
    public Long getProjects() {
        return this.projects;
    }

    /**
     * Getter for <code>NATIONS2.cityTimer</code>.
     */
    public Long getCitytimer() {
        return this.citytimer;
    }

    /**
     * Getter for <code>NATIONS2.projectTimer</code>.
     */
    public Long getProjecttimer() {
        return this.projecttimer;
    }

    /**
     * Getter for <code>NATIONS2.beigeTimer</code>.
     */
    public Long getBeigetimer() {
        return this.beigetimer;
    }

    /**
     * Getter for <code>NATIONS2.warPolicyTimer</code>.
     */
    public Long getWarpolicytimer() {
        return this.warpolicytimer;
    }

    /**
     * Getter for <code>NATIONS2.domesticPolicyTimer</code>.
     */
    public Long getDomesticpolicytimer() {
        return this.domesticpolicytimer;
    }

    /**
     * Getter for <code>NATIONS2.colorTimer</code>.
     */
    public Long getColortimer() {
        return this.colortimer;
    }

    /**
     * Getter for <code>NATIONS2.espionageFull</code>.
     */
    public Long getEspionagefull() {
        return this.espionagefull;
    }

    /**
     * Getter for <code>NATIONS2.dc_turn</code>.
     */
    public Integer getDcTurn() {
        return this.dcTurn;
    }

    /**
     * Getter for <code>NATIONS2.wars_won</code>.
     */
    public Integer getWarsWon() {
        return this.warsWon;
    }

    /**
     * Getter for <code>NATIONS2.wars_lost</code>.
     */
    public Integer getWarsLost() {
        return this.warsLost;
    }

    /**
     * Getter for <code>NATIONS2.tax_id</code>.
     */
    public Integer getTaxId() {
        return this.taxId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Nations2 other = (Nations2) obj;
        if (this.nationId == null) {
            if (other.nationId != null)
                return false;
        }
        else if (!this.nationId.equals(other.nationId))
            return false;
        if (this.nation == null) {
            if (other.nation != null)
                return false;
        }
        else if (!this.nation.equals(other.nation))
            return false;
        if (this.leader == null) {
            if (other.leader != null)
                return false;
        }
        else if (!this.leader.equals(other.leader))
            return false;
        if (this.allianceId == null) {
            if (other.allianceId != null)
                return false;
        }
        else if (!this.allianceId.equals(other.allianceId))
            return false;
        if (this.lastActive == null) {
            if (other.lastActive != null)
                return false;
        }
        else if (!this.lastActive.equals(other.lastActive))
            return false;
        if (this.score == null) {
            if (other.score != null)
                return false;
        }
        else if (!this.score.equals(other.score))
            return false;
        if (this.cities == null) {
            if (other.cities != null)
                return false;
        }
        else if (!this.cities.equals(other.cities))
            return false;
        if (this.domesticPolicy == null) {
            if (other.domesticPolicy != null)
                return false;
        }
        else if (!this.domesticPolicy.equals(other.domesticPolicy))
            return false;
        if (this.warPolicy == null) {
            if (other.warPolicy != null)
                return false;
        }
        else if (!this.warPolicy.equals(other.warPolicy))
            return false;
        if (this.soldiers == null) {
            if (other.soldiers != null)
                return false;
        }
        else if (!this.soldiers.equals(other.soldiers))
            return false;
        if (this.tanks == null) {
            if (other.tanks != null)
                return false;
        }
        else if (!this.tanks.equals(other.tanks))
            return false;
        if (this.aircraft == null) {
            if (other.aircraft != null)
                return false;
        }
        else if (!this.aircraft.equals(other.aircraft))
            return false;
        if (this.ships == null) {
            if (other.ships != null)
                return false;
        }
        else if (!this.ships.equals(other.ships))
            return false;
        if (this.missiles == null) {
            if (other.missiles != null)
                return false;
        }
        else if (!this.missiles.equals(other.missiles))
            return false;
        if (this.nukes == null) {
            if (other.nukes != null)
                return false;
        }
        else if (!this.nukes.equals(other.nukes))
            return false;
        if (this.spies == null) {
            if (other.spies != null)
                return false;
        }
        else if (!this.spies.equals(other.spies))
            return false;
        if (this.enteredVm == null) {
            if (other.enteredVm != null)
                return false;
        }
        else if (!this.enteredVm.equals(other.enteredVm))
            return false;
        if (this.leavingVm == null) {
            if (other.leavingVm != null)
                return false;
        }
        else if (!this.leavingVm.equals(other.leavingVm))
            return false;
        if (this.color == null) {
            if (other.color != null)
                return false;
        }
        else if (!this.color.equals(other.color))
            return false;
        if (this.date == null) {
            if (other.date != null)
                return false;
        }
        else if (!this.date.equals(other.date))
            return false;
        if (this.position == null) {
            if (other.position != null)
                return false;
        }
        else if (!this.position.equals(other.position))
            return false;
        if (this.allianceposition == null) {
            if (other.allianceposition != null)
                return false;
        }
        else if (!this.allianceposition.equals(other.allianceposition))
            return false;
        if (this.continent == null) {
            if (other.continent != null)
                return false;
        }
        else if (!this.continent.equals(other.continent))
            return false;
        if (this.projects == null) {
            if (other.projects != null)
                return false;
        }
        else if (!this.projects.equals(other.projects))
            return false;
        if (this.citytimer == null) {
            if (other.citytimer != null)
                return false;
        }
        else if (!this.citytimer.equals(other.citytimer))
            return false;
        if (this.projecttimer == null) {
            if (other.projecttimer != null)
                return false;
        }
        else if (!this.projecttimer.equals(other.projecttimer))
            return false;
        if (this.beigetimer == null) {
            if (other.beigetimer != null)
                return false;
        }
        else if (!this.beigetimer.equals(other.beigetimer))
            return false;
        if (this.warpolicytimer == null) {
            if (other.warpolicytimer != null)
                return false;
        }
        else if (!this.warpolicytimer.equals(other.warpolicytimer))
            return false;
        if (this.domesticpolicytimer == null) {
            if (other.domesticpolicytimer != null)
                return false;
        }
        else if (!this.domesticpolicytimer.equals(other.domesticpolicytimer))
            return false;
        if (this.colortimer == null) {
            if (other.colortimer != null)
                return false;
        }
        else if (!this.colortimer.equals(other.colortimer))
            return false;
        if (this.espionagefull == null) {
            if (other.espionagefull != null)
                return false;
        }
        else if (!this.espionagefull.equals(other.espionagefull))
            return false;
        if (this.dcTurn == null) {
            if (other.dcTurn != null)
                return false;
        }
        else if (!this.dcTurn.equals(other.dcTurn))
            return false;
        if (this.warsWon == null) {
            if (other.warsWon != null)
                return false;
        }
        else if (!this.warsWon.equals(other.warsWon))
            return false;
        if (this.warsLost == null) {
            if (other.warsLost != null)
                return false;
        }
        else if (!this.warsLost.equals(other.warsLost))
            return false;
        if (this.taxId == null) {
            if (other.taxId != null)
                return false;
        }
        else if (!this.taxId.equals(other.taxId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.nationId == null) ? 0 : this.nationId.hashCode());
        result = prime * result + ((this.nation == null) ? 0 : this.nation.hashCode());
        result = prime * result + ((this.leader == null) ? 0 : this.leader.hashCode());
        result = prime * result + ((this.allianceId == null) ? 0 : this.allianceId.hashCode());
        result = prime * result + ((this.lastActive == null) ? 0 : this.lastActive.hashCode());
        result = prime * result + ((this.score == null) ? 0 : this.score.hashCode());
        result = prime * result + ((this.cities == null) ? 0 : this.cities.hashCode());
        result = prime * result + ((this.domesticPolicy == null) ? 0 : this.domesticPolicy.hashCode());
        result = prime * result + ((this.warPolicy == null) ? 0 : this.warPolicy.hashCode());
        result = prime * result + ((this.soldiers == null) ? 0 : this.soldiers.hashCode());
        result = prime * result + ((this.tanks == null) ? 0 : this.tanks.hashCode());
        result = prime * result + ((this.aircraft == null) ? 0 : this.aircraft.hashCode());
        result = prime * result + ((this.ships == null) ? 0 : this.ships.hashCode());
        result = prime * result + ((this.missiles == null) ? 0 : this.missiles.hashCode());
        result = prime * result + ((this.nukes == null) ? 0 : this.nukes.hashCode());
        result = prime * result + ((this.spies == null) ? 0 : this.spies.hashCode());
        result = prime * result + ((this.enteredVm == null) ? 0 : this.enteredVm.hashCode());
        result = prime * result + ((this.leavingVm == null) ? 0 : this.leavingVm.hashCode());
        result = prime * result + ((this.color == null) ? 0 : this.color.hashCode());
        result = prime * result + ((this.date == null) ? 0 : this.date.hashCode());
        result = prime * result + ((this.position == null) ? 0 : this.position.hashCode());
        result = prime * result + ((this.allianceposition == null) ? 0 : this.allianceposition.hashCode());
        result = prime * result + ((this.continent == null) ? 0 : this.continent.hashCode());
        result = prime * result + ((this.projects == null) ? 0 : this.projects.hashCode());
        result = prime * result + ((this.citytimer == null) ? 0 : this.citytimer.hashCode());
        result = prime * result + ((this.projecttimer == null) ? 0 : this.projecttimer.hashCode());
        result = prime * result + ((this.beigetimer == null) ? 0 : this.beigetimer.hashCode());
        result = prime * result + ((this.warpolicytimer == null) ? 0 : this.warpolicytimer.hashCode());
        result = prime * result + ((this.domesticpolicytimer == null) ? 0 : this.domesticpolicytimer.hashCode());
        result = prime * result + ((this.colortimer == null) ? 0 : this.colortimer.hashCode());
        result = prime * result + ((this.espionagefull == null) ? 0 : this.espionagefull.hashCode());
        result = prime * result + ((this.dcTurn == null) ? 0 : this.dcTurn.hashCode());
        result = prime * result + ((this.warsWon == null) ? 0 : this.warsWon.hashCode());
        result = prime * result + ((this.warsLost == null) ? 0 : this.warsLost.hashCode());
        result = prime * result + ((this.taxId == null) ? 0 : this.taxId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Nations2 (");

        sb.append(nationId);
        sb.append(", ").append(nation);
        sb.append(", ").append(leader);
        sb.append(", ").append(allianceId);
        sb.append(", ").append(lastActive);
        sb.append(", ").append(score);
        sb.append(", ").append(cities);
        sb.append(", ").append(domesticPolicy);
        sb.append(", ").append(warPolicy);
        sb.append(", ").append(soldiers);
        sb.append(", ").append(tanks);
        sb.append(", ").append(aircraft);
        sb.append(", ").append(ships);
        sb.append(", ").append(missiles);
        sb.append(", ").append(nukes);
        sb.append(", ").append(spies);
        sb.append(", ").append(enteredVm);
        sb.append(", ").append(leavingVm);
        sb.append(", ").append(color);
        sb.append(", ").append(date);
        sb.append(", ").append(position);
        sb.append(", ").append(allianceposition);
        sb.append(", ").append(continent);
        sb.append(", ").append(projects);
        sb.append(", ").append(citytimer);
        sb.append(", ").append(projecttimer);
        sb.append(", ").append(beigetimer);
        sb.append(", ").append(warpolicytimer);
        sb.append(", ").append(domesticpolicytimer);
        sb.append(", ").append(colortimer);
        sb.append(", ").append(espionagefull);
        sb.append(", ").append(dcTurn);
        sb.append(", ").append(warsWon);
        sb.append(", ").append(warsLost);
        sb.append(", ").append(taxId);

        sb.append(")");
        return sb.toString();
    }
}
