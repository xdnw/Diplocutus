/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.nations.tables.records;


import org.example.jooq.nations.tables.LootEstimate;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LootEstimateRecord extends UpdatableRecordImpl<LootEstimateRecord> implements Record7<Integer, Long, Long, byte[], byte[], byte[], byte[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>LOOT_ESTIMATE.nation_id</code>.
     */
    public LootEstimateRecord setNationId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>LOOT_ESTIMATE.nation_id</code>.
     */
    public Integer getNationId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>LOOT_ESTIMATE.last_turn_revenue</code>.
     */
    public LootEstimateRecord setLastTurnRevenue(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>LOOT_ESTIMATE.last_turn_revenue</code>.
     */
    public Long getLastTurnRevenue() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>LOOT_ESTIMATE.last_resolved</code>.
     */
    public LootEstimateRecord setLastResolved(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>LOOT_ESTIMATE.last_resolved</code>.
     */
    public Long getLastResolved() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>LOOT_ESTIMATE.tax_id</code>.
     */
    public LootEstimateRecord setTaxId(byte[] value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>LOOT_ESTIMATE.tax_id</code>.
     */
    public byte[] getTaxId() {
        return (byte[]) get(3);
    }

    /**
     * Setter for <code>LOOT_ESTIMATE.min</code>.
     */
    public LootEstimateRecord setMin(byte[] value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>LOOT_ESTIMATE.min</code>.
     */
    public byte[] getMin() {
        return (byte[]) get(4);
    }

    /**
     * Setter for <code>LOOT_ESTIMATE.max</code>.
     */
    public LootEstimateRecord setMax(byte[] value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>LOOT_ESTIMATE.max</code>.
     */
    public byte[] getMax() {
        return (byte[]) get(5);
    }

    /**
     * Setter for <code>LOOT_ESTIMATE.offset</code>.
     */
    public LootEstimateRecord setOffset(byte[] value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>LOOT_ESTIMATE.offset</code>.
     */
    public byte[] getOffset() {
        return (byte[]) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Long, Long, byte[], byte[], byte[], byte[]> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Long, Long, byte[], byte[], byte[], byte[]> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return LootEstimate.LOOT_ESTIMATE.NATION_ID;
    }

    @Override
    public Field<Long> field2() {
        return LootEstimate.LOOT_ESTIMATE.LAST_TURN_REVENUE;
    }

    @Override
    public Field<Long> field3() {
        return LootEstimate.LOOT_ESTIMATE.LAST_RESOLVED;
    }

    @Override
    public Field<byte[]> field4() {
        return LootEstimate.LOOT_ESTIMATE.TAX_ID;
    }

    @Override
    public Field<byte[]> field5() {
        return LootEstimate.LOOT_ESTIMATE.MIN;
    }

    @Override
    public Field<byte[]> field6() {
        return LootEstimate.LOOT_ESTIMATE.MAX;
    }

    @Override
    public Field<byte[]> field7() {
        return LootEstimate.LOOT_ESTIMATE.OFFSET;
    }

    @Override
    public Integer component1() {
        return getNationId();
    }

    @Override
    public Long component2() {
        return getLastTurnRevenue();
    }

    @Override
    public Long component3() {
        return getLastResolved();
    }

    @Override
    public byte[] component4() {
        return getTaxId();
    }

    @Override
    public byte[] component5() {
        return getMin();
    }

    @Override
    public byte[] component6() {
        return getMax();
    }

    @Override
    public byte[] component7() {
        return getOffset();
    }

    @Override
    public Integer value1() {
        return getNationId();
    }

    @Override
    public Long value2() {
        return getLastTurnRevenue();
    }

    @Override
    public Long value3() {
        return getLastResolved();
    }

    @Override
    public byte[] value4() {
        return getTaxId();
    }

    @Override
    public byte[] value5() {
        return getMin();
    }

    @Override
    public byte[] value6() {
        return getMax();
    }

    @Override
    public byte[] value7() {
        return getOffset();
    }

    @Override
    public LootEstimateRecord value1(Integer value) {
        setNationId(value);
        return this;
    }

    @Override
    public LootEstimateRecord value2(Long value) {
        setLastTurnRevenue(value);
        return this;
    }

    @Override
    public LootEstimateRecord value3(Long value) {
        setLastResolved(value);
        return this;
    }

    @Override
    public LootEstimateRecord value4(byte[] value) {
        setTaxId(value);
        return this;
    }

    @Override
    public LootEstimateRecord value5(byte[] value) {
        setMin(value);
        return this;
    }

    @Override
    public LootEstimateRecord value6(byte[] value) {
        setMax(value);
        return this;
    }

    @Override
    public LootEstimateRecord value7(byte[] value) {
        setOffset(value);
        return this;
    }

    @Override
    public LootEstimateRecord values(Integer value1, Long value2, Long value3, byte[] value4, byte[] value5, byte[] value6, byte[] value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LootEstimateRecord
     */
    public LootEstimateRecord() {
        super(LootEstimate.LOOT_ESTIMATE);
    }

    /**
     * Create a detached, initialised LootEstimateRecord
     */
    public LootEstimateRecord(Integer nationId, Long lastTurnRevenue, Long lastResolved, byte[] taxId, byte[] min, byte[] max, byte[] offset) {
        super(LootEstimate.LOOT_ESTIMATE);

        setNationId(nationId);
        setLastTurnRevenue(lastTurnRevenue);
        setLastResolved(lastResolved);
        setTaxId(taxId);
        setMin(min);
        setMax(max);
        setOffset(offset);
    }

    /**
     * Create a detached, initialised LootEstimateRecord
     */
    public LootEstimateRecord(org.example.jooq.nations.tables.pojos.LootEstimate value) {
        super(LootEstimate.LOOT_ESTIMATE);

        if (value != null) {
            setNationId(value.getNationId());
            setLastTurnRevenue(value.getLastTurnRevenue());
            setLastResolved(value.getLastResolved());
            setTaxId(value.getTaxId());
            setMin(value.getMin());
            setMax(value.getMax());
            setOffset(value.getOffset());
        }
    }
}
