/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.nations.tables;


import org.example.jooq.nations.DefaultSchema;
import org.example.jooq.nations.Keys;
import org.example.jooq.nations.tables.records.Nations2Record;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Nations2 extends TableImpl<Nations2Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>NATIONS2</code>
     */
    public static final Nations2 NATIONS2 = new Nations2();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Nations2Record> getRecordType() {
        return Nations2Record.class;
    }

    /**
     * The column <code>NATIONS2.nation_id</code>.
     */
    public final TableField<Nations2Record, Integer> NATION_ID = createField(DSL.name("nation_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.nation</code>.
     */
    public final TableField<Nations2Record, String> NATION = createField(DSL.name("nation"), SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>NATIONS2.leader</code>.
     */
    public final TableField<Nations2Record, String> LEADER = createField(DSL.name("leader"), SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>NATIONS2.alliance_id</code>.
     */
    public final TableField<Nations2Record, Integer> ALLIANCE_ID = createField(DSL.name("alliance_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.last_active</code>.
     */
    public final TableField<Nations2Record, Long> LAST_ACTIVE = createField(DSL.name("last_active"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.score</code>.
     */
    public final TableField<Nations2Record, Integer> SCORE = createField(DSL.name("score"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.cities</code>.
     */
    public final TableField<Nations2Record, Integer> CITIES = createField(DSL.name("cities"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.domestic_policy</code>.
     */
    public final TableField<Nations2Record, Integer> DOMESTIC_POLICY = createField(DSL.name("domestic_policy"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.war_policy</code>.
     */
    public final TableField<Nations2Record, Integer> WAR_POLICY = createField(DSL.name("war_policy"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.soldiers</code>.
     */
    public final TableField<Nations2Record, Integer> SOLDIERS = createField(DSL.name("soldiers"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.tanks</code>.
     */
    public final TableField<Nations2Record, Integer> TANKS = createField(DSL.name("tanks"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.aircraft</code>.
     */
    public final TableField<Nations2Record, Integer> AIRCRAFT = createField(DSL.name("aircraft"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.ships</code>.
     */
    public final TableField<Nations2Record, Integer> SHIPS = createField(DSL.name("ships"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.missiles</code>.
     */
    public final TableField<Nations2Record, Integer> MISSILES = createField(DSL.name("missiles"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.nukes</code>.
     */
    public final TableField<Nations2Record, Integer> NUKES = createField(DSL.name("nukes"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.spies</code>.
     */
    public final TableField<Nations2Record, Integer> SPIES = createField(DSL.name("spies"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.entered_vm</code>.
     */
    public final TableField<Nations2Record, Long> ENTERED_VM = createField(DSL.name("entered_vm"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.leaving_vm</code>.
     */
    public final TableField<Nations2Record, Long> LEAVING_VM = createField(DSL.name("leaving_vm"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.color</code>.
     */
    public final TableField<Nations2Record, Integer> COLOR = createField(DSL.name("color"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.date</code>.
     */
    public final TableField<Nations2Record, Long> DATE = createField(DSL.name("date"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.position</code>.
     */
    public final TableField<Nations2Record, Integer> POSITION = createField(DSL.name("position"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.alliancePosition</code>.
     */
    public final TableField<Nations2Record, Integer> ALLIANCEPOSITION = createField(DSL.name("alliancePosition"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.continent</code>.
     */
    public final TableField<Nations2Record, Integer> CONTINENT = createField(DSL.name("continent"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.projects</code>.
     */
    public final TableField<Nations2Record, Long> PROJECTS = createField(DSL.name("projects"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.cityTimer</code>.
     */
    public final TableField<Nations2Record, Long> CITYTIMER = createField(DSL.name("cityTimer"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.projectTimer</code>.
     */
    public final TableField<Nations2Record, Long> PROJECTTIMER = createField(DSL.name("projectTimer"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.beigeTimer</code>.
     */
    public final TableField<Nations2Record, Long> BEIGETIMER = createField(DSL.name("beigeTimer"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.warPolicyTimer</code>.
     */
    public final TableField<Nations2Record, Long> WARPOLICYTIMER = createField(DSL.name("warPolicyTimer"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.domesticPolicyTimer</code>.
     */
    public final TableField<Nations2Record, Long> DOMESTICPOLICYTIMER = createField(DSL.name("domesticPolicyTimer"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.colorTimer</code>.
     */
    public final TableField<Nations2Record, Long> COLORTIMER = createField(DSL.name("colorTimer"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.espionageFull</code>.
     */
    public final TableField<Nations2Record, Long> ESPIONAGEFULL = createField(DSL.name("espionageFull"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.dc_turn</code>.
     */
    public final TableField<Nations2Record, Integer> DC_TURN = createField(DSL.name("dc_turn"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.wars_won</code>.
     */
    public final TableField<Nations2Record, Integer> WARS_WON = createField(DSL.name("wars_won"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.wars_lost</code>.
     */
    public final TableField<Nations2Record, Integer> WARS_LOST = createField(DSL.name("wars_lost"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NATIONS2.tax_id</code>.
     */
    public final TableField<Nations2Record, Integer> TAX_ID = createField(DSL.name("tax_id"), SQLDataType.INTEGER.nullable(false), this, "");

    private Nations2(Name alias, Table<Nations2Record> aliased) {
        this(alias, aliased, null);
    }

    private Nations2(Name alias, Table<Nations2Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>NATIONS2</code> table reference
     */
    public Nations2(String alias) {
        this(DSL.name(alias), NATIONS2);
    }

    /**
     * Create an aliased <code>NATIONS2</code> table reference
     */
    public Nations2(Name alias) {
        this(alias, NATIONS2);
    }

    /**
     * Create a <code>NATIONS2</code> table reference
     */
    public Nations2() {
        this(DSL.name("NATIONS2"), null);
    }

    public <O extends Record> Nations2(Table<O> child, ForeignKey<O, Nations2Record> key) {
        super(child, key, NATIONS2);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public UniqueKey<Nations2Record> getPrimaryKey() {
        return Keys.NATIONS2__PK_NATIONS2;
    }

    @Override
    public Nations2 as(String alias) {
        return new Nations2(DSL.name(alias), this);
    }

    @Override
    public Nations2 as(Name alias) {
        return new Nations2(alias, this);
    }

    @Override
    public Nations2 as(Table<?> alias) {
        return new Nations2(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public Nations2 rename(String name) {
        return new Nations2(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Nations2 rename(Name name) {
        return new Nations2(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public Nations2 rename(Table<?> name) {
        return new Nations2(name.getQualifiedName(), null);
    }
}
