/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.nations.tables.records;


import org.example.jooq.nations.tables.NationLoot3;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NationLoot3Record extends UpdatableRecordImpl<NationLoot3Record> implements Record4<Integer, byte[], Long, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>NATION_LOOT3.id</code>.
     */
    public NationLoot3Record setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>NATION_LOOT3.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>NATION_LOOT3.total_rss</code>.
     */
    public NationLoot3Record setTotalRss(byte[] value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>NATION_LOOT3.total_rss</code>.
     */
    public byte[] getTotalRss() {
        return (byte[]) get(1);
    }

    /**
     * Setter for <code>NATION_LOOT3.date</code>.
     */
    public NationLoot3Record setDate(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>NATION_LOOT3.date</code>.
     */
    public Long getDate() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>NATION_LOOT3.type</code>.
     */
    public NationLoot3Record setType(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>NATION_LOOT3.type</code>.
     */
    public Integer getType() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, byte[], Long, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, byte[], Long, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return NationLoot3.NATION_LOOT3.ID;
    }

    @Override
    public Field<byte[]> field2() {
        return NationLoot3.NATION_LOOT3.TOTAL_RSS;
    }

    @Override
    public Field<Long> field3() {
        return NationLoot3.NATION_LOOT3.DATE;
    }

    @Override
    public Field<Integer> field4() {
        return NationLoot3.NATION_LOOT3.TYPE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public byte[] component2() {
        return getTotalRss();
    }

    @Override
    public Long component3() {
        return getDate();
    }

    @Override
    public Integer component4() {
        return getType();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public byte[] value2() {
        return getTotalRss();
    }

    @Override
    public Long value3() {
        return getDate();
    }

    @Override
    public Integer value4() {
        return getType();
    }

    @Override
    public NationLoot3Record value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public NationLoot3Record value2(byte[] value) {
        setTotalRss(value);
        return this;
    }

    @Override
    public NationLoot3Record value3(Long value) {
        setDate(value);
        return this;
    }

    @Override
    public NationLoot3Record value4(Integer value) {
        setType(value);
        return this;
    }

    @Override
    public NationLoot3Record values(Integer value1, byte[] value2, Long value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NationLoot3Record
     */
    public NationLoot3Record() {
        super(NationLoot3.NATION_LOOT3);
    }

    /**
     * Create a detached, initialised NationLoot3Record
     */
    public NationLoot3Record(Integer id, byte[] totalRss, Long date, Integer type) {
        super(NationLoot3.NATION_LOOT3);

        setId(id);
        setTotalRss(totalRss);
        setDate(date);
        setType(type);
    }

    /**
     * Create a detached, initialised NationLoot3Record
     */
    public NationLoot3Record(org.example.jooq.nations.tables.pojos.NationLoot3 value) {
        super(NationLoot3.NATION_LOOT3);

        if (value != null) {
            setId(value.getId());
            setTotalRss(value.getTotalRss());
            setDate(value.getDate());
            setType(value.getType());
        }
    }
}
