/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.nations.tables.records;


import org.example.jooq.nations.tables.SpyActivity;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpyActivityRecord extends UpdatableRecordImpl<SpyActivityRecord> implements Record5<Integer, Long, Long, Long, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>spy_activity.nation</code>.
     */
    public SpyActivityRecord setNation(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>spy_activity.nation</code>.
     */
    public Integer getNation() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>spy_activity.timestamp</code>.
     */
    public SpyActivityRecord setTimestamp(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>spy_activity.timestamp</code>.
     */
    public Long getTimestamp() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>spy_activity.projects</code>.
     */
    public SpyActivityRecord setProjects(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>spy_activity.projects</code>.
     */
    public Long getProjects() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>spy_activity.change</code>.
     */
    public SpyActivityRecord setChange(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>spy_activity.change</code>.
     */
    public Long getChange() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>spy_activity.spies</code>.
     */
    public SpyActivityRecord setSpies(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>spy_activity.spies</code>.
     */
    public Integer getSpies() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Long, Long, Long, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Long, Long, Long, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return SpyActivity.SPY_ACTIVITY.NATION;
    }

    @Override
    public Field<Long> field2() {
        return SpyActivity.SPY_ACTIVITY.TIMESTAMP;
    }

    @Override
    public Field<Long> field3() {
        return SpyActivity.SPY_ACTIVITY.PROJECTS;
    }

    @Override
    public Field<Long> field4() {
        return SpyActivity.SPY_ACTIVITY.CHANGE;
    }

    @Override
    public Field<Integer> field5() {
        return SpyActivity.SPY_ACTIVITY.SPIES;
    }

    @Override
    public Integer component1() {
        return getNation();
    }

    @Override
    public Long component2() {
        return getTimestamp();
    }

    @Override
    public Long component3() {
        return getProjects();
    }

    @Override
    public Long component4() {
        return getChange();
    }

    @Override
    public Integer component5() {
        return getSpies();
    }

    @Override
    public Integer value1() {
        return getNation();
    }

    @Override
    public Long value2() {
        return getTimestamp();
    }

    @Override
    public Long value3() {
        return getProjects();
    }

    @Override
    public Long value4() {
        return getChange();
    }

    @Override
    public Integer value5() {
        return getSpies();
    }

    @Override
    public SpyActivityRecord value1(Integer value) {
        setNation(value);
        return this;
    }

    @Override
    public SpyActivityRecord value2(Long value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public SpyActivityRecord value3(Long value) {
        setProjects(value);
        return this;
    }

    @Override
    public SpyActivityRecord value4(Long value) {
        setChange(value);
        return this;
    }

    @Override
    public SpyActivityRecord value5(Integer value) {
        setSpies(value);
        return this;
    }

    @Override
    public SpyActivityRecord values(Integer value1, Long value2, Long value3, Long value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SpyActivityRecord
     */
    public SpyActivityRecord() {
        super(SpyActivity.SPY_ACTIVITY);
    }

    /**
     * Create a detached, initialised SpyActivityRecord
     */
    public SpyActivityRecord(Integer nation, Long timestamp, Long projects, Long change, Integer spies) {
        super(SpyActivity.SPY_ACTIVITY);

        setNation(nation);
        setTimestamp(timestamp);
        setProjects(projects);
        setChange(change);
        setSpies(spies);
    }

    /**
     * Create a detached, initialised SpyActivityRecord
     */
    public SpyActivityRecord(org.example.jooq.nations.tables.pojos.SpyActivity value) {
        super(SpyActivity.SPY_ACTIVITY);

        if (value != null) {
            setNation(value.getNation());
            setTimestamp(value.getTimestamp());
            setProjects(value.getProjects());
            setChange(value.getChange());
            setSpies(value.getSpies());
        }
    }
}
