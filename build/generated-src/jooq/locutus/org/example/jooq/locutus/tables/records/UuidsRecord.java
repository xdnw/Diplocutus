/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.locutus.tables.records;


import org.example.jooq.locutus.tables.Uuids;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UuidsRecord extends UpdatableRecordImpl<UuidsRecord> implements Record3<Integer, byte[], Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>UUIDS.nation_id</code>.
     */
    public UuidsRecord setNationId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>UUIDS.nation_id</code>.
     */
    public Integer getNationId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>UUIDS.uuid</code>.
     */
    public UuidsRecord setUuid(byte[] value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>UUIDS.uuid</code>.
     */
    public byte[] getUuid() {
        return (byte[]) get(1);
    }

    /**
     * Setter for <code>UUIDS.date</code>.
     */
    public UuidsRecord setDate(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>UUIDS.date</code>.
     */
    public Long getDate() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<Integer, byte[], Long> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, byte[], Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, byte[], Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Uuids.UUIDS.NATION_ID;
    }

    @Override
    public Field<byte[]> field2() {
        return Uuids.UUIDS.UUID;
    }

    @Override
    public Field<Long> field3() {
        return Uuids.UUIDS.DATE;
    }

    @Override
    public Integer component1() {
        return getNationId();
    }

    @Override
    public byte[] component2() {
        return getUuid();
    }

    @Override
    public Long component3() {
        return getDate();
    }

    @Override
    public Integer value1() {
        return getNationId();
    }

    @Override
    public byte[] value2() {
        return getUuid();
    }

    @Override
    public Long value3() {
        return getDate();
    }

    @Override
    public UuidsRecord value1(Integer value) {
        setNationId(value);
        return this;
    }

    @Override
    public UuidsRecord value2(byte[] value) {
        setUuid(value);
        return this;
    }

    @Override
    public UuidsRecord value3(Long value) {
        setDate(value);
        return this;
    }

    @Override
    public UuidsRecord values(Integer value1, byte[] value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UuidsRecord
     */
    public UuidsRecord() {
        super(Uuids.UUIDS);
    }

    /**
     * Create a detached, initialised UuidsRecord
     */
    public UuidsRecord(Integer nationId, byte[] uuid, Long date) {
        super(Uuids.UUIDS);

        setNationId(nationId);
        setUuid(uuid);
        setDate(date);
    }

    /**
     * Create a detached, initialised UuidsRecord
     */
    public UuidsRecord(org.example.jooq.locutus.tables.pojos.Uuids value) {
        super(Uuids.UUIDS);

        if (value != null) {
            setNationId(value.getNationId());
            setUuid(value.getUuid());
            setDate(value.getDate());
        }
    }
}
