/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.locutus.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Credentials2 implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long discordid;
    private final String user;
    private final String password;
    private final String salt;

    public Credentials2(Credentials2 value) {
        this.discordid = value.discordid;
        this.user = value.user;
        this.password = value.password;
        this.salt = value.salt;
    }

    public Credentials2(
        Long discordid,
        String user,
        String password,
        String salt
    ) {
        this.discordid = discordid;
        this.user = user;
        this.password = password;
        this.salt = salt;
    }

    /**
     * Getter for <code>CREDENTIALS2.discordid</code>.
     */
    public Long getDiscordid() {
        return this.discordid;
    }

    /**
     * Getter for <code>CREDENTIALS2.user</code>.
     */
    public String getUser() {
        return this.user;
    }

    /**
     * Getter for <code>CREDENTIALS2.password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Getter for <code>CREDENTIALS2.salt</code>.
     */
    public String getSalt() {
        return this.salt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Credentials2 other = (Credentials2) obj;
        if (this.discordid == null) {
            if (other.discordid != null)
                return false;
        }
        else if (!this.discordid.equals(other.discordid))
            return false;
        if (this.user == null) {
            if (other.user != null)
                return false;
        }
        else if (!this.user.equals(other.user))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.salt == null) {
            if (other.salt != null)
                return false;
        }
        else if (!this.salt.equals(other.salt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.discordid == null) ? 0 : this.discordid.hashCode());
        result = prime * result + ((this.user == null) ? 0 : this.user.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.salt == null) ? 0 : this.salt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Credentials2 (");

        sb.append(discordid);
        sb.append(", ").append(user);
        sb.append(", ").append(password);
        sb.append(", ").append(salt);

        sb.append(")");
        return sb.toString();
    }
}
